spiOptionDedicated global:[DEDICATED_SPI]
SPIHelper
SPIHelper
cpol call:[getDataMode]
cpha call:[getDataMode]
reverseByte
reverse16Bit call:[return,reverseByte]
maskInterrupts call:[DEBUGSPI,empty,get_core_num,insert_or_assign,interrupts,noInterrupts] noreturn:[interrupts]
unmaskInterrupts call:[DEBUGSPI,empty,get_core_num,gpio_set_irq_enabled,interrupts,noInterrupts] noreturn:[gpio_set_irq_enabled,interrupts]
usingInterrupt call:[insert] noreturn:[insert]
notUsingInterrupt call:[erase] noreturn:[erase]
setMISO call:[setRX] noreturn:[setRX]
setMOSI call:[setTX] noreturn:[setTX]
begin call:[begin] noreturn:[begin]
usingInterrupt call:[usingInterrupt] noreturn:[usingInterrupt]
notUsingInterrupt call:[notUsingInterrupt] noreturn:[notUsingInterrupt]
attachInterrupt
detachInterrupt
SdSpiConfig
SdSpiConfig
SdSpiConfig
SdSpiConfig
setSckSpeed call:[SPISettings] noreturn:[SPISettings]
activate call:[beginTransaction] noreturn:[beginTransaction]
begin global:[SPI,USER_SPI_BEGIN] call:[begin] noreturn:[begin]
end call:[end] noreturn:[end]
deactivate call:[endTransaction] noreturn:[endTransaction]
receive call:[transfer] noreturn:[transfer]
receive call:[transfer]
send call:[transfer] noreturn:[transfer]
send call:[transfer] noreturn:[transfer]
prvN
prvM
mdtYear
mdtMonth
psn
capacity call:[return]
eraseSingleBlock
eraseSize call:[return]
copy
permWriteProtect
tempWriteProtect
srcStructure
sdSpec
dataAfterErase
sdSecurity call:[return]
sdBusWidths
sdSpec3
sdSpec4
sdSpecX call:[return]
cmdSupport
sdSpecVer call:[sdSpec,sdSpec3,sdSpec4,sdSpecX] noreturn:[sdSpecX]
appClass
auSizeKB
busWidth
discard
eraseSizeAU
eraseTimeout
eraseOffset
fule
secureMode
speedClass
uhsClass
videoClass
FsBlockDeviceInterface
end
hasDedicatedSpi
isDedicatedSpi
isSpi
setDedicatedSpi
status
SdSpiCard call:[initSharedSpiCard] noreturn:[initSharedSpiCard]
sdError
errorCode
errorData
hasDedicatedSpi
isDedicatedSpi
isSpi
readCID global:[CMD10] call:[readRegister] noreturn:[readRegister]
readCSD global:[CMD9] call:[readRegister] noreturn:[readRegister]
sdState
type
cardAcmd global:[CMD55] call:[cardCommand] noreturn:[cardCommand]
spiSelect call:[sdCsWrite] noreturn:[sdCsWrite]
spiUnselect call:[sdCsWrite] noreturn:[sdCsWrite]
spiActivate call:[activate] noreturn:[activate]
spiBegin call:[begin] noreturn:[begin]
spiDeactivate call:[deactivate] noreturn:[deactivate]
spiEnd call:[end] noreturn:[end]
spiReceive call:[receive] noreturn:[receive]
spiReceive call:[receive] noreturn:[receive]
spiSend call:[send] noreturn:[send]
spiSend call:[send] noreturn:[send]
spiSetSckSpeed call:[setSckSpeed] noreturn:[setSckSpeed]
initSharedSpiCard
PioSdioConfig
clkPin
cmdPin
dat0Pin
clkDiv
PioSdioConfig
CmdRsp_t
setSdErrorCode
isSpi
isSpi
newCard call:[begin]
newCard call:[begin]
isDigit
isSpace call:[return]
isWriteMode
compileYear
compileMonth
compileDay
compileHour
compileMinute
compileSecond
FS_DATE
FS_YEAR
FS_MONTH call:[return]
FS_DAY
FS_TIME
FS_HOUR
FS_MINUTE call:[return]
FS_SECOND
atEnd
reset
getch call:[atEnd]
get16 call:[atEnd]
FsCache call:[init] noreturn:[init]
cacheBuffer
cacheSafeRead call:[isCached,memcpy,readSector] noreturn:[readSector]
cacheSafeRead call:[isCached,readSectors,sync] noreturn:[readSectors]
cacheSafeWrite call:[invalidate,isCached,writeSector] noreturn:[invalidate,writeSector]
cacheSafeWrite call:[invalidate,isCached,writeSectors] noreturn:[invalidate,writeSectors]
clear call:[invalidate,isDirty,sync]
dirty
init call:[invalidate] noreturn:[invalidate]
invalidate
isCached
isCached
isDirty
sector
setMirrorOffset
getLe16
getLe32
getLe64
setLe16
setLe32
setLe64
lfnReservedChar
sfnReservedChar
valid call:[memcmp]
used
isMsBasicPartition global:[MS_TYPE_GUID] call:[memcmp]
isFatFile global:[FAT_ATTRIB_LABEL,FS_ATTRIB_DIRECTORY] call:[return]
isFatFileOrSubdir global:[FAT_ATTRIB_LABEL] call:[return]
isFatLongName global:[FAT_ATTRIB_LONG_NAME]
isFatSubdir global:[FAT_ATTRIB_LABEL,FS_ATTRIB_DIRECTORY] call:[return]
exFatChecksum call:[return]
bytesPerClusterShift
bytesPerCluster
bytesPerSector
bytesPerSectorShift
dirEntriesPerCluster global:[FS_DIR_SIZE]
sectorMask
sectorsPerCluster
sectorsPerFat
cacheClear call:[clear] noreturn:[clear]
clusterCount
sectorsPerClusterShift
dataStartSector
end call:[cacheClear] noreturn:[cacheClear]
fatCount
fatStartSector
fatType
rootDirEntryCount
rootDirStart
volumeSectorCount call:[clusterCount,sectorsPerCluster] noreturn:[clusterCount]
dbgFat call:[fatGet] noreturn:[fatGet]
isBusy call:[isBusy] noreturn:[isBusy]
cacheSafeRead call:[cacheSafeRead] noreturn:[cacheSafeRead]
cacheSafeRead call:[cacheSafeRead] noreturn:[cacheSafeRead]
cacheSafeWrite call:[cacheSafeWrite] noreturn:[cacheSafeWrite]
cacheSafeWrite call:[cacheSafeWrite] noreturn:[cacheSafeWrite]
syncDevice call:[syncDevice] noreturn:[syncDevice]
setFreeClusterCount
updateFreeClusterCount
dataCache
fatCachePrepare call:[dataCachePrepare] noreturn:[dataCachePrepare]
cacheSync call:[sync,syncDevice] noreturn:[syncDevice]
dataCachePrepare call:[prepare] noreturn:[prepare]
cacheSyncData call:[sync] noreturn:[sync]
cacheAddress call:[cacheBuffer] noreturn:[cacheBuffer]
cacheSectorNumber call:[sector] noreturn:[sector]
cacheDirty call:[dirty] noreturn:[dirty]
sectorOfCluster call:[return]
clusterStartSector
fatPutEOC call:[fatPut] noreturn:[fatPut]
isEOC
FatFile
FatFile call:[open] noreturn:[open]
copy
move call:[copy]
FatFile call:[move] noreturn:[move]
operator= call:[move]
operatorbool call:[isOpen] noreturn:[isOpen]
attrib global:[FS_ATTRIB_USER_SETTABLE] call:[isFileOrSubDir]
available call:[available32]
available32 call:[curPosition,fileSize,isFile]
clearError
clearWriteError
curCluster
curPosition
dirIndex
exists call:[open] noreturn:[open]
fileSize
firstBlock call:[firstSector] noreturn:[firstSector]
flush call:[sync] noreturn:[sync]
getAccessDateTime call:[getAccessDate]
getError
getWriteError call:[isOpen]
isContiguous
isDir
isFile
isFileOrSubDir call:[isFile,isSubDir] noreturn:[isSubDir]
isHidden global:[FS_ATTRIB_HIDDEN]
isLFN
isOpen
isReadable
isReadOnly global:[FS_ATTRIB_READ_ONLY]
isRoot
isRoot32
isRootFixed
isSubDir
isSystem global:[FS_ATTRIB_SYSTEM]
isWritable
printAccessDateTime call:[printAccessDate] noreturn:[printAccessDate]
printField call:[fmtDouble,sizeof,write] noreturn:[write]
printField call:[printField] noreturn:[printField]
printField call:[fmtBase10,sizeof,write] noreturn:[fmtBase10,write]
read call:[read]
read call:[readPrivate] noreturn:[readPrivate]
rewind call:[seekSet] noreturn:[seekSet]
seekCur call:[seekSet] noreturn:[seekSet]
seekEnd call:[isFile,seekSet]
truncate call:[seekSet,truncate] noreturn:[truncate]
write call:[strlen,write] noreturn:[write]
write call:[write] noreturn:[write]
ls call:[ls] noreturn:[ls]
printName call:[printName] noreturn:[printName]
cacheDir call:[readDirCache,seekSet]
lfnChecksum
flush call:[sync] noreturn:[sync]
write call:[write] noreturn:[write]
write call:[write] noreturn:[write]
File32
File32 call:[open] noreturn:[open]
openNextFile call:[openNext]
attrib call:[attrib,open]
attrib call:[attrib,open]
begin call:[chdir,init]
chvol
chdir call:[close,openRoot] noreturn:[openRoot]
exists call:[open] noreturn:[open]
ls call:[ls] noreturn:[ls]
ls call:[ls,open] noreturn:[ls]
mkdir call:[mkdir,vwd] noreturn:[mkdir]
open call:[open]
remove call:[open,remove] noreturn:[remove]
rename call:[open,rename,vwd] noreturn:[rename]
rmdir call:[open,rmdir] noreturn:[rmdir]
truncate call:[open,truncate] noreturn:[truncate]
ls call:[ls] noreturn:[ls]
ls call:[ls] noreturn:[ls]
chdir call:[c_str,chdir] noreturn:[chdir]
exists call:[c_str,exists] noreturn:[exists]
mkdir call:[c_str,mkdir] noreturn:[mkdir]
open call:[c_str,open] noreturn:[open]
remove call:[c_str,remove] noreturn:[remove]
rename call:[c_str,rename] noreturn:[rename]
rmdir call:[c_str,rmdir] noreturn:[rmdir]
truncate call:[c_str,truncate] noreturn:[truncate]
cwv
vwd
allocateCluster call:[fatGet,fatPut,fatPutEOC,updateFreeClusterCount]
allocContiguous call:[fatGet,fatPut,fatPutEOC,updateFreeClusterCount]
fatGet call:[fatCachePrepare,fatType,getLe16,getLe32,isEOC] noreturn:[getLe16,getLe32]
fatPut call:[fatCachePrepare,fatType,setLe16,setLe32]
freeChain call:[fatGet,fatPut,updateFreeClusterCount,while]
freeClusterCount call:[fatCachePrepare,fatGet,fatType,setFreeClusterCount]
init global:[FS_DIR_SIZE] call:[dataCachePrepare,getLe16,getLe32,init,setFreeClusterCount,setMirrorOffset] noreturn:[getLe32]
StreamFile < FatFile , uint32_t >
available call:[available] noreturn:[available]
flush call:[sync] noreturn:[sync]
isDirectory call:[isDir] noreturn:[isDir]
peek call:[peek] noreturn:[peek]
position call:[curPosition] noreturn:[curPosition]
read call:[read] noreturn:[read]
rewindDirectory call:[isDir,rewind] noreturn:[rewind]
seek call:[seekSet] noreturn:[seekSet]
size call:[fileSize] noreturn:[fileSize]
write call:[write] noreturn:[write]
write call:[write] noreturn:[write]
